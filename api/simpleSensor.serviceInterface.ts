/**
 * soccr.io API
 * An ASP.NET Core Web API for managing Soccer items
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { CommonResult } from '../model/models';
import { SimpleSensorStoreEntry } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface SimpleSensorServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * 
     * 
     * @param DeviceID 
     */
    clearDevice(DeviceID?: string, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param DeviceID 
     * @param SensorContext 
     * @param RangeStart 
     */
    clearDeviceContextAfterDate(DeviceID?: string, SensorContext?: string, RangeStart?: Date, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param DeviceID 
     * @param SensorContext 
     * @param RangeStart 
     */
    clearDeviceContextBeforeDate(DeviceID?: string, SensorContext?: string, RangeStart?: Date, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param DeviceID 
     * @param SensorContext 
     * @param RangeStart 
     * @param RangeEnd 
     */
    clearDeviceContextWithinDateRange(DeviceID?: string, SensorContext?: string, RangeStart?: Date, RangeEnd?: Date, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param DeviceID 
     * @param SensorContext 
     */
    clearDeviceForContext(DeviceID?: string, SensorContext?: string, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param SimpleSensorStoreID 
     */
    deleteSensorItem(SimpleSensorStoreID?: number, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param request_body 
     */
    deleteSensorList(request_body?: Array<number>, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param SimpleSensorStoreEntry 
     */
    insertMessageBatch(SimpleSensorStoreEntry?: Array<SimpleSensorStoreEntry>, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param SimpleSensorStoreEntry 
     */
    insertSensorEvent(SimpleSensorStoreEntry?: SimpleSensorStoreEntry, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param DeviceID 
     * @param SensorContext 
     * @param SensorTypeID 
     */
    selectDeviceLatest(DeviceID?: string, SensorContext?: string, SensorTypeID?: number, extraHttpRequestParams?: any): Observable<SimpleSensorStoreEntry>;

    /**
     * 
     * 
     * @param DeviceID 
     * @param SensorContext 
     * @param SensorTypeID 
     */
    selectDeviceReadings(DeviceID?: string, SensorContext?: string, SensorTypeID?: number, extraHttpRequestParams?: any): Observable<Array<SimpleSensorStoreEntry>>;

    /**
     * 
     * 
     * @param DeviceID 
     * @param SensorContext 
     * @param SensorTypeID 
     * @param RangeStart 
     * @param RangeEnd 
     */
    selectDeviceReadingsForDateRange(DeviceID?: string, SensorContext?: string, SensorTypeID?: number, RangeStart?: Date, RangeEnd?: Date, extraHttpRequestParams?: any): Observable<Array<SimpleSensorStoreEntry>>;

    /**
     * 
     * 
     * @param SimpleSensorStoreID 
     */
    selectSensorItem(SimpleSensorStoreID?: number, extraHttpRequestParams?: any): Observable<SimpleSensorStoreEntry>;

    /**
     * 
     * 
     * @param DeviceID 
     * @param SensorContext 
     * @param SensorTypeID 
     * @param TopCount 
     */
    selectTopNDeviceReadings(DeviceID?: string, SensorContext?: string, SensorTypeID?: number, TopCount?: number, extraHttpRequestParams?: any): Observable<Array<SimpleSensorStoreEntry>>;

    /**
     * 
     * 
     */
    sensorsClearAll(extraHttpRequestParams?: any): Observable<CommonResult>;

}

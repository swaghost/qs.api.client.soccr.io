/**
 * soccr.io API
 * An ASP.NET Core Web API for managing Soccer items
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { CommonResult } from '../model/models';
import { DecisionNodeTechniqueCrossoverDetails } from '../model/models';
import { DecisionNodeTechniqueCrossoverRequest } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface DecisionNTXServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Attach a node to a technique
     * 
     * @param DecisionNodeTechniqueCrossoverRequest 
     */
    attachCrossover(DecisionNodeTechniqueCrossoverRequest?: DecisionNodeTechniqueCrossoverRequest, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * Delete an existing link.
     * 
     * @param NTXID 
     */
    detachCrossover(NTXID?: number, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param TAID 
     */
    detachCrossoverForApplication(TAID?: number, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * Select a given crossover entry.
     * 
     * @param NTXID 
     */
    getCrossoverAttachment(NTXID?: number, extraHttpRequestParams?: any): Observable<DecisionNodeTechniqueCrossoverDetails>;

    /**
     * Get all Techniques for a node
     * 
     * @param NodeID 
     */
    getCrossoverAttachmentForNode(NodeID?: number, extraHttpRequestParams?: any): Observable<Array<DecisionNodeTechniqueCrossoverDetails>>;

    /**
     * Get all nodes applied to a technique.
     * 
     * @param TechniqueID 
     */
    getCrossoverAttachmentForTechnique(TechniqueID?: number, extraHttpRequestParams?: any): Observable<Array<DecisionNodeTechniqueCrossoverDetails>>;

    /**
     * Move the sort order of an existing entry up or down.
     * 
     * @param NTXID 
     * @param Direction 
     */
    moveUpDown(NTXID?: number, Direction?: number, extraHttpRequestParams?: any): Observable<CommonResult>;

}

/**
 * soccr.io API
 * An ASP.NET Core Web API for managing Soccer items
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { CommonResult } from '../model/models';
import { ContextStory } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface ContextStoriesServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * 
     * 
     * @param Context 
     * @param ContextKey 
     */
    contextStoryDeleteContextd(Context?: string, ContextKey?: number, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param ContextStoryID 
     */
    contextStoryDeleteItem(ContextStoryID?: number, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param Context 
     * @param ContextKey 
     */
    contextStoryExists(Context?: string, ContextKey?: number, extraHttpRequestParams?: any): Observable<boolean>;

    /**
     * 
     * 
     * @param ContextStory 
     */
    contextStoryInsert(ContextStory?: ContextStory, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param SearchText 
     */
    contextStorySearch(SearchText?: string, extraHttpRequestParams?: any): Observable<Array<ContextStory>>;

    /**
     * 
     * 
     * @param Context 
     * @param ContextKey 
     * @param SearchText 
     */
    contextStorySearchContextWithText(Context?: string, ContextKey?: number, SearchText?: string, extraHttpRequestParams?: any): Observable<Array<ContextStory>>;

    /**
     * 
     * 
     * @param Context 
     * @param ContextKey 
     */
    contextStorySelectContext(Context?: string, ContextKey?: number, extraHttpRequestParams?: any): Observable<Array<ContextStory>>;

    /**
     * 
     * 
     * @param ContextStoryID 
     */
    contextStorySelectItem(ContextStoryID?: number, extraHttpRequestParams?: any): Observable<ContextStory>;

    /**
     * 
     * 
     * @param ContextStory 
     */
    contextStoryUpdate(ContextStory?: ContextStory, extraHttpRequestParams?: any): Observable<CommonResult>;

}

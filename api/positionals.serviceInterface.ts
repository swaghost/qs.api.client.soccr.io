/**
 * soccr.io API
 * An ASP.NET Core Web API for managing Soccer items
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { PositionalTreeNode } from '../model/models';
import { SportPositionDetail } from '../model/models';
import { SportPositionSpiderChartEvaluationClass } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface PositionalsServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * 
     * 
     * @param PositionID 
     * @param DisplayModeID 
     * @param InclusionModeID 
     */
    positionalItemFlat(PositionID?: number, DisplayModeID?: number, InclusionModeID?: number, extraHttpRequestParams?: any): Observable<Array<PositionalTreeNode>>;

    /**
     * 
     * 
     * @param PositionID 
     * @param DisplayModeID 
     * @param InclusionModeID 
     */
    positionalItemTree(PositionID?: number, DisplayModeID?: number, InclusionModeID?: number, extraHttpRequestParams?: any): Observable<Array<PositionalTreeNode>>;

    /**
     * 
     * 
     * @param SportID 
     * @param IncludeReady 
     * @param IncludeNotReady 
     * @param IncludeGeneral 
     * @param IncludeOrientationSpecific 
     * @param IncludeOrientationNonSpecific 
     * @param IncludeOrientationGeneralized 
     */
    positionsSelectAll(SportID?: number, IncludeReady?: boolean, IncludeNotReady?: boolean, IncludeGeneral?: number, IncludeOrientationSpecific?: number, IncludeOrientationNonSpecific?: number, IncludeOrientationGeneralized?: number, extraHttpRequestParams?: any): Observable<Array<SportPositionDetail>>;

    /**
     * 
     * 
     * @param PositionID 
     */
    positionsSelectItem(PositionID?: number, extraHttpRequestParams?: any): Observable<SportPositionDetail>;

    /**
     * 
     * 
     * @param PositionID 
     */
    positionsSelectRadar(PositionID?: number, extraHttpRequestParams?: any): Observable<Array<SportPositionSpiderChartEvaluationClass>>;

}

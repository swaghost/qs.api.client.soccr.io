/**
 * soccr.io API
 * An ASP.NET Core Web API for managing Soccer items
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { CommonResult } from '../model/models';
import { ReleaseNote } from '../model/models';
import { VersionInfo } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface VersionReleaseNotesServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * 
     * 
     * @param ReleaseNoteID 
     */
    releaseNoteDelete(ReleaseNoteID?: number, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param AddedByUserID 
     * @param ReleaseNotePublic 
     * @param ReleaseNotePrivate 
     */
    releaseNoteInsert(AddedByUserID?: number, ReleaseNotePublic?: string, ReleaseNotePrivate?: string, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param ReleaseNote 
     */
    releaseNoteInsertContext(ReleaseNote?: ReleaseNote, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param ReleaseNoteID 
     */
    releaseNoteItem(ReleaseNoteID?: number, extraHttpRequestParams?: any): Observable<ReleaseNote>;

    /**
     * 
     * 
     * @param ReleaseNoteID 
     * @param AddedByUserID 
     * @param ReleaseNotePublic 
     * @param ReleaseNotePrivate 
     */
    releaseNoteUpdate(ReleaseNoteID?: number, AddedByUserID?: number, ReleaseNotePublic?: string, ReleaseNotePrivate?: string, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param Context 
     * @param ContextKey 
     */
    releaseNotesForContext(Context?: string, ContextKey?: number, extraHttpRequestParams?: any): Observable<Array<ReleaseNote>>;

    /**
     * 
     * 
     * @param RangeStartUTC 
     */
    releaseNotesForRange(RangeStartUTC?: Date, extraHttpRequestParams?: any): Observable<Array<ReleaseNote>>;

    /**
     * 
     * 
     * @param RevisionID 
     */
    releaseNotesForRevision(RevisionID?: number, extraHttpRequestParams?: any): Observable<Array<ReleaseNote>>;

    /**
     * 
     * 
     * @param VersionMajor 
     * @param VersionMinor 
     */
    releaseNotesForVersion(VersionMajor?: number, VersionMinor?: number, extraHttpRequestParams?: any): Observable<Array<ReleaseNote>>;

    /**
     * 
     * 
     * @param RevisionID 
     * @param VersionReleaseNotes 
     */
    updateVersionReleaseNote(RevisionID?: number, VersionReleaseNotes?: string, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param VersionReleaseNotes 
     */
    updateVersionReleaseNoteTop(VersionReleaseNotes?: string, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     */
    versionInfoForConsumptionCurrentRelease(extraHttpRequestParams?: any): Observable<Array<VersionInfo>>;

    /**
     * 
     * 
     * @param RangeStartUTC 
     */
    versionInfoForConsumptionForwardOfDate(RangeStartUTC?: Date, extraHttpRequestParams?: any): Observable<Array<VersionInfo>>;

    /**
     * 
     * 
     * @param MonthsBack 
     */
    versionInfoForConsumptionForwardOfRange(MonthsBack?: number, extraHttpRequestParams?: any): Observable<Array<VersionInfo>>;

    /**
     * 
     * 
     * @param RangeStartUTC 
     * @param RangeEndUTC 
     */
    versionInfoForConsumptionWithinDateRange(RangeStartUTC?: Date, RangeEndUTC?: Date, extraHttpRequestParams?: any): Observable<Array<VersionInfo>>;

    /**
     * 
     * 
     */
    versionInfoGetCurrent(extraHttpRequestParams?: any): Observable<VersionInfo>;

    /**
     * 
     * 
     * @param RevisionID 
     */
    versionInfoGetItem(RevisionID?: number, extraHttpRequestParams?: any): Observable<VersionInfo>;

    /**
     * 
     * 
     */
    versionInfoList(extraHttpRequestParams?: any): Observable<Array<VersionInfo>>;

    /**
     * 
     * 
     */
    versionInfoTickMajor(extraHttpRequestParams?: any): Observable<VersionInfo>;

    /**
     * 
     * 
     */
    versionInfoTickMinor(extraHttpRequestParams?: any): Observable<VersionInfo>;

    /**
     * 
     * 
     */
    versionInfoTickRevision(extraHttpRequestParams?: any): Observable<VersionInfo>;

}

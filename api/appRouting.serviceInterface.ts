/**
 * soccr.io API
 * An ASP.NET Core Web API for managing Soccer items
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { AppRoutingManager } from '../model/models';
import { RoutingMenu } from '../model/models';
import { RoutingMenuSection } from '../model/models';
import { RoutingModule } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface AppRoutingServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * 
     * 
     * @param RoutingAppID 
     */
    getRoutingModuleForModuleApp(RoutingAppID?: number, extraHttpRequestParams?: any): Observable<Array<RoutingModule>>;

    /**
     * 
     * 
     * @param RoutingAppID 
     */
    getRoutingModuleForModuleAppMgr(RoutingAppID?: number, extraHttpRequestParams?: any): Observable<AppRoutingManager>;

    /**
     * 
     * 
     * @param RouteModuleClassName 
     */
    getRoutingModuleForModuleClassName(RouteModuleClassName?: string, extraHttpRequestParams?: any): Observable<RoutingModule>;

    /**
     * 
     * 
     * @param RouteModuleID 
     */
    getRoutingModuleForModuleID(RouteModuleID?: number, extraHttpRequestParams?: any): Observable<RoutingModule>;

    /**
     * 
     * 
     * @param RouteModuleClassName 
     */
    routesForModuleClassName(RouteModuleClassName?: string, extraHttpRequestParams?: any): Observable<Array<RoutingMenu>>;

    /**
     * 
     * 
     * @param RouteModuleID 
     */
    routesForModuleID(RouteModuleID?: number, extraHttpRequestParams?: any): Observable<Array<RoutingMenu>>;

    /**
     * 
     * 
     * @param RouteModuleClassName 
     */
    routingSectionsForModuleClassName(RouteModuleClassName?: string, extraHttpRequestParams?: any): Observable<Array<RoutingMenuSection>>;

    /**
     * 
     * 
     * @param RouteModuleID 
     */
    routingSectionsForModuleID(RouteModuleID?: number, extraHttpRequestParams?: any): Observable<Array<RoutingMenuSection>>;

}

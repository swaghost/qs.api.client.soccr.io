/**
 * soccr.io API
 * An ASP.NET Core Web API for managing Soccer items
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { CommonResult } from '../model/models';
import { SimpleEventStoreEntry } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface SimpleEventServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * 
     * 
     * @param EventContext 
     * @param RangeStart 
     */
    clearEventContextAfterDate(EventContext?: string, RangeStart?: Date, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param EventContext 
     * @param RangeStart 
     */
    clearEventContextBeforeDate(EventContext?: string, RangeStart?: Date, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param EventContext 
     * @param RangeStart 
     * @param RangeEnd 
     */
    clearEventContextForDateRange(EventContext?: string, RangeStart?: Date, RangeEnd?: Date, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param EventContext 
     */
    clearEventForContext(EventContext?: string, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param EventMarkerID 
     */
    deleteEventItem(EventMarkerID?: number, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     */
    eventsClearAll(extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param SimpleEventStoreEntry 
     */
    insertEvent(SimpleEventStoreEntry?: SimpleEventStoreEntry, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param EventContext 
     * @param EventTypeID 
     */
    selectContextEvents(EventContext?: string, EventTypeID?: number, extraHttpRequestParams?: any): Observable<Array<SimpleEventStoreEntry>>;

    /**
     * 
     * 
     * @param EventContext 
     * @param EventTypeID 
     * @param RangeStart 
     * @param RangeEnd 
     */
    selectContextEventsForRangeAll(EventContext?: string, EventTypeID?: number, RangeStart?: Date, RangeEnd?: Date, extraHttpRequestParams?: any): Observable<Array<SimpleEventStoreEntry>>;

    /**
     * 
     * 
     * @param EventContext 
     * @param EventTypeID 
     * @param RangeStart 
     * @param RangeEnd 
     * @param TopCount 
     */
    selectContextEventsForRangeTopN(EventContext?: string, EventTypeID?: number, RangeStart?: Date, RangeEnd?: Date, TopCount?: number, extraHttpRequestParams?: any): Observable<Array<SimpleEventStoreEntry>>;

    /**
     * 
     * 
     * @param EventContext 
     * @param EventTypeID 
     */
    selectContextEventsLatest(EventContext?: string, EventTypeID?: number, extraHttpRequestParams?: any): Observable<SimpleEventStoreEntry>;

    /**
     * 
     * 
     * @param EventContext 
     * @param EventTypeID 
     * @param TopCount 
     */
    selectContextEventsTopN(EventContext?: string, EventTypeID?: number, TopCount?: number, extraHttpRequestParams?: any): Observable<Array<SimpleEventStoreEntry>>;

    /**
     * 
     * 
     * @param EventMarkerID 
     */
    selectEventItem(EventMarkerID?: number, extraHttpRequestParams?: any): Observable<SimpleEventStoreEntry>;

}

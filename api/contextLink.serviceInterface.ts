/**
 * soccr.io API
 * An ASP.NET Core Web API for managing Soccer items
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { CommonResult } from '../model/models';
import { ContextLinkAttachmentDetail } from '../model/models';
import { ContextLinkAttachmentEntry } from '../model/models';
import { ContextLinkEntry } from '../model/models';
import { ContextLinkEntryForDisplay } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface ContextLinkServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * 
     * 
     * @param ContextLinkAttachmentID 
     */
    linkAttachmentDeleteItem(ContextLinkAttachmentID?: string, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param CLID 
     * @param Context 
     * @param ContextKey 
     */
    linkAttachmentDeleteLinkContext(CLID?: number, Context?: string, ContextKey?: number, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param ContextLinkAttachmentEntry 
     */
    linkAttachmentInsert(ContextLinkAttachmentEntry?: ContextLinkAttachmentEntry, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param Context 
     * @param ContextKey 
     */
    linkAttachmentSelectContext(Context?: string, ContextKey?: number, extraHttpRequestParams?: any): Observable<Array<ContextLinkAttachmentDetail>>;

    /**
     * 
     * 
     * @param ContextLinkAttachmentID 
     */
    linkAttachmentSelectItem(ContextLinkAttachmentID?: string, extraHttpRequestParams?: any): Observable<Array<ContextLinkAttachmentDetail>>;

    /**
     * 
     * 
     * @param CLID 
     * @param Context 
     * @param ContextKey 
     */
    linkAttachmentSelectItemContext(CLID?: number, Context?: string, ContextKey?: number, extraHttpRequestParams?: any): Observable<Array<ContextLinkAttachmentDetail>>;

    /**
     * 
     * 
     * @param CLID 
     */
    linkAttachmentSelectLink(CLID?: number, extraHttpRequestParams?: any): Observable<Array<ContextLinkAttachmentDetail>>;

    /**
     * 
     * 
     * @param ContextLinkAttachmentEntry 
     */
    linkAttachmentUpdate(ContextLinkAttachmentEntry?: ContextLinkAttachmentEntry, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param ContextLinkAttachmentEntry 
     */
    linkAttachmentUpdateBulk(ContextLinkAttachmentEntry?: Array<ContextLinkAttachmentEntry>, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param CLID 
     */
    linkEntryDelete(CLID?: number, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param ContextLinkEntry 
     */
    linkEntryInsert(ContextLinkEntry?: ContextLinkEntry, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param CLID 
     */
    linkEntrySelectItem(CLID?: number, extraHttpRequestParams?: any): Observable<ContextLinkEntry>;

    /**
     * 
     * 
     * @param ContextLinkEntry 
     */
    linkEntryUpdate(ContextLinkEntry?: ContextLinkEntry, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param Context 
     * @param ContextKey 
     * @param SearchMode 
     */
    linkListSelectContext(Context?: string, ContextKey?: number, SearchMode?: number, extraHttpRequestParams?: any): Observable<Array<ContextLinkEntryForDisplay>>;

    /**
     * 
     * 
     * @param Context 
     * @param ContextKey 
     * @param SearchMode 
     * @param SearchTerm 
     */
    linkListSelectContextContains(Context?: string, ContextKey?: number, SearchMode?: number, SearchTerm?: string, extraHttpRequestParams?: any): Observable<Array<ContextLinkEntryForDisplay>>;

    /**
     * 
     * 
     * @param Context 
     * @param ContextKey 
     * @param SearchMode 
     * @param SearchTerm 
     */
    linkListSelectContextStartsWith(Context?: string, ContextKey?: number, SearchMode?: number, SearchTerm?: string, extraHttpRequestParams?: any): Observable<Array<ContextLinkEntryForDisplay>>;

}

/**
 * soccr.io API
 * An ASP.NET Core Web API for managing Soccer items
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { CandidateCredential } from '../model/models';
import { CandidateCredentialCategory } from '../model/models';
import { CommonResult } from '../model/models';
import { ContributionDetail } from '../model/models';
import { ContributionPayload } from '../model/models';
import { ContributionType } from '../model/models';
import { ContributorCandidate } from '../model/models';
import { ContributorCandidateStatus } from '../model/models';
import { ContributorDashboardStats } from '../model/models';
import { ContributorLevel } from '../model/models';
import { ContributorNeed } from '../model/models';
import { ContributorTier } from '../model/models';
import { ContributorType } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface ContributorServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * 
     * 
     */
    candidateCredentialsCategoriesSelectAll(extraHttpRequestParams?: any): Observable<Array<CandidateCredentialCategory>>;

    /**
     * 
     * 
     * @param CredentialID 
     */
    candidateCredentialsDelete(CredentialID?: number, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param ContributorID 
     */
    candidateCredentialsDeleteContributor(ContributorID?: number, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param CandidateCredential 
     */
    candidateCredentialsInsert(CandidateCredential?: CandidateCredential, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param CredentialID 
     * @param Direction 
     */
    candidateCredentialsMoveUpDown(CredentialID?: number, Direction?: number, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     */
    candidateCredentialsSelectActive(extraHttpRequestParams?: any): Observable<Array<CandidateCredential>>;

    /**
     * 
     * 
     * @param ContributorID 
     */
    candidateCredentialsSelectContributor(ContributorID?: number, extraHttpRequestParams?: any): Observable<Array<CandidateCredential>>;

    /**
     * 
     * 
     * @param CandidateCredential 
     */
    candidateCredentialsUpdate(CandidateCredential?: CandidateCredential, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param CredentialID 
     * @param UserID 
     * @param WasVerified 
     */
    candidateCredentialsUpdateForVerify(CredentialID?: number, UserID?: number, WasVerified?: boolean, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     */
    contributionTypesSelectAll(extraHttpRequestParams?: any): Observable<Array<ContributionType>>;

    /**
     * 
     * 
     * @param ContributionPayload 
     */
    contributionUpdate(ContributionPayload?: ContributionPayload, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param Context 
     * @param ContextKey 
     */
    contributionsSelectAll(Context?: string, ContextKey?: number, extraHttpRequestParams?: any): Observable<Array<ContributionDetail>>;

    /**
     * 
     * 
     */
    contributorCandidateStatusListSelectAll(extraHttpRequestParams?: any): Observable<Array<ContributorCandidateStatus>>;

    /**
     * 
     * 
     */
    contributorDashboardStatsSelectAll(extraHttpRequestParams?: any): Observable<ContributorDashboardStats>;

    /**
     * 
     * 
     * @param body 
     */
    contributorDelete(body?: number, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param ContributorCandidate 
     */
    contributorInsert(ContributorCandidate?: ContributorCandidate, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     */
    contributorLevelsSelectAll(extraHttpRequestParams?: any): Observable<Array<ContributorLevel>>;

    /**
     * 
     * 
     */
    contributorTiersSelectAll(extraHttpRequestParams?: any): Observable<Array<ContributorTier>>;

    /**
     * 
     * 
     */
    contributorTypesSelectAll(extraHttpRequestParams?: any): Observable<Array<ContributorType>>;

    /**
     * 
     * 
     * @param ContributorCandidate 
     */
    contributorUpdateAll(ContributorCandidate?: ContributorCandidate, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param ContributorID 
     * @param ContributorLevelID 
     * @param ContributorAreaOfInfluence 
     */
    contributorUpdateContributorLevel(ContributorID?: number, ContributorLevelID?: number, ContributorAreaOfInfluence?: string, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param ContributorID 
     * @param ContributorCandidateStatusID 
     * @param ContributorCandidateStatusActionReviewNotes 
     * @param ContributorCandidateStatusActionResponseText 
     * @param ContributorLevelID 
     * @param ContributorAreaOfInfluence 
     */
    contributorUpdateContributorStatus(ContributorID?: number, ContributorCandidateStatusID?: number, ContributorCandidateStatusActionReviewNotes?: string, ContributorCandidateStatusActionResponseText?: string, ContributorLevelID?: number, ContributorAreaOfInfluence?: string, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param ContributorCandidate 
     */
    contributorUpdateVitalsOnly(ContributorCandidate?: ContributorCandidate, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param ContributorNeed 
     */
    contributorsNeedsDelete(ContributorNeed?: ContributorNeed, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param ContributorNeed 
     */
    contributorsNeedsExpire(ContributorNeed?: ContributorNeed, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param ContributorNeed 
     */
    contributorsNeedsInsert(ContributorNeed?: ContributorNeed, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param ContributorNeed 
     */
    contributorsNeedsReactivate(ContributorNeed?: ContributorNeed, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     */
    contributorsNeedsSelectActive(extraHttpRequestParams?: any): Observable<Array<ContributorNeed>>;

    /**
     * 
     * 
     */
    contributorsNeedsSelectAll(extraHttpRequestParams?: any): Observable<Array<ContributorNeed>>;

    /**
     * 
     * 
     * @param ContributorNeed 
     */
    contributorsNeedsUpdate(ContributorNeed?: ContributorNeed, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     */
    contributorsSelectAll(extraHttpRequestParams?: any): Observable<Array<ContributorCandidate>>;

    /**
     * 
     * 
     */
    contributorsSelectApproved(extraHttpRequestParams?: any): Observable<Array<ContributorCandidate>>;

    /**
     * 
     * 
     */
    contributorsSelectDenied(extraHttpRequestParams?: any): Observable<Array<ContributorCandidate>>;

    /**
     * 
     * 
     * @param ContributorID 
     */
    contributorsSelectItem(ContributorID?: number, extraHttpRequestParams?: any): Observable<ContributorCandidate>;

    /**
     * 
     * 
     */
    contributorsSelectOpen(extraHttpRequestParams?: any): Observable<Array<ContributorCandidate>>;

}

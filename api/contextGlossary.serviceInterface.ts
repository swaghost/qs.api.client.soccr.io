/**
 * soccr.io API
 * An ASP.NET Core Web API for managing Soccer items
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { CommonResult } from '../model/models';
import { ContextGlossaryAttachmentDetail } from '../model/models';
import { ContextGlossaryAttachmentEntry } from '../model/models';
import { ContextGlossaryAutoComplete } from '../model/models';
import { ContextGlossaryEntry } from '../model/models';
import { ContextGlossaryEntryForDisplay } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface ContextGlossaryServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * 
     * 
     * @param CGID 
     */
    deleteContextGlossaryEntry(CGID?: number, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param Context 
     * @param ContextKey 
     */
    glossaryAttachmentDeleteContextAll(Context?: string, ContextKey?: number, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param CGID 
     * @param Context 
     * @param ContextKey 
     */
    glossaryAttachmentDeleteContextItem(CGID?: number, Context?: string, ContextKey?: number, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param CGAID 
     */
    glossaryAttachmentDeleteItem(CGAID?: string, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param ContextGlossaryAttachmentEntry 
     */
    glossaryAttachmentInsert(ContextGlossaryAttachmentEntry?: ContextGlossaryAttachmentEntry, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param Context 
     * @param ContextKey 
     */
    glossaryAttachmentSelectContext(Context?: string, ContextKey?: number, extraHttpRequestParams?: any): Observable<Array<ContextGlossaryAttachmentDetail>>;

    /**
     * 
     * 
     * @param Context 
     * @param ContextKey 
     */
    glossaryAttachmentSelectContextForDisplay(Context?: string, ContextKey?: number, extraHttpRequestParams?: any): Observable<Array<ContextGlossaryEntryForDisplay>>;

    /**
     * 
     * 
     * @param CGAID 
     */
    glossaryAttachmentSelectItem(CGAID?: string, extraHttpRequestParams?: any): Observable<Array<ContextGlossaryAttachmentDetail>>;

    /**
     * 
     * 
     * @param CGID 
     * @param Context 
     * @param ContextKey 
     */
    glossaryAttachmentSelectItemContext(CGID?: number, Context?: string, ContextKey?: number, extraHttpRequestParams?: any): Observable<Array<ContextGlossaryAttachmentDetail>>;

    /**
     * 
     * 
     * @param CGID 
     */
    glossaryAttachmentSelectLink(CGID?: number, extraHttpRequestParams?: any): Observable<Array<ContextGlossaryAttachmentDetail>>;

    /**
     * 
     * 
     * @param ContextGlossaryAttachmentEntry 
     */
    glossaryAttachmentUpdate(ContextGlossaryAttachmentEntry?: ContextGlossaryAttachmentEntry, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param ContextGlossaryAttachmentEntry 
     */
    glossaryAttachmentUpdateBulk(ContextGlossaryAttachmentEntry?: Array<ContextGlossaryAttachmentEntry>, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param Context 
     * @param ContextKey 
     * @param SearchTerm 
     */
    glossaryContains(Context?: string, ContextKey?: number, SearchTerm?: string, extraHttpRequestParams?: any): Observable<Array<ContextGlossaryEntry>>;

    /**
     * 
     * 
     */
    glossarySelectAll(extraHttpRequestParams?: any): Observable<Array<ContextGlossaryEntry>>;

    /**
     * 
     * 
     * @param Context 
     * @param ContextKey 
     * @param SearchTerm 
     */
    glossaryStartsWith(Context?: string, ContextKey?: number, SearchTerm?: string, extraHttpRequestParams?: any): Observable<Array<ContextGlossaryEntry>>;

    /**
     * 
     * 
     * @param NotInContext 
     * @param NotInContextKey 
     * @param SearchText 
     */
    glossaryTermSearchAnyContextNotInContextAutoComplete(NotInContext?: string, NotInContextKey?: number, SearchText?: string, extraHttpRequestParams?: any): Observable<Array<ContextGlossaryAutoComplete>>;

    /**
     * 
     * 
     * @param SearchContext 
     * @param SearchContextKey 
     * @param NotInContext 
     * @param NotInContextKey 
     * @param SearchText 
     */
    glossaryTermSearchContextNotInContextAutoComplete(SearchContext?: string, SearchContextKey?: number, NotInContext?: string, NotInContextKey?: number, SearchText?: string, extraHttpRequestParams?: any): Observable<Array<ContextGlossaryAutoComplete>>;

    /**
     * 
     * 
     * @param Context 
     * @param ContextKey 
     */
    glossaryTermSearchSuggestions(Context?: string, ContextKey?: number, extraHttpRequestParams?: any): Observable<Array<ContextGlossaryEntry>>;

    /**
     * 
     * 
     * @param ContextGlossaryEntry 
     */
    insertGlossaryEntry(ContextGlossaryEntry?: ContextGlossaryEntry, extraHttpRequestParams?: any): Observable<CommonResult>;

    /**
     * 
     * 
     * @param CGID 
     */
    selectContextGlossaryItem(CGID?: number, extraHttpRequestParams?: any): Observable<ContextGlossaryEntry>;

    /**
     * 
     * 
     * @param Context 
     * @param ContextKey 
     */
    selectGlossaryForContext(Context?: string, ContextKey?: number, extraHttpRequestParams?: any): Observable<Array<ContextGlossaryEntry>>;

    /**
     * 
     * 
     * @param ContextGlossaryEntry 
     */
    updateGlossaryEntry(ContextGlossaryEntry?: ContextGlossaryEntry, extraHttpRequestParams?: any): Observable<CommonResult>;

}
